# Generated by Django 5.2.5 on 2025-08-21 01:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.models import F


def normalize_insc_espacios(apps, schema_editor):
    Insc = apps.get_model("academia_core", "InscripcionEspacio")
    # EN_CURSO ⇒ fecha_baja NULL
    Insc.objects.filter(estado="EN_CURSO").exclude(fecha_baja__isnull=True).update(fecha_baja=None)
    # BAJA y fecha_baja NULL ⇒ usar fecha_inscripcion
    Insc.objects.filter(estado="BAJA", fecha_baja__isnull=True).update(fecha_baja=F("fecha_inscripcion"))
    # fecha_baja < fecha_inscripcion ⇒ ajustar a fecha_inscripcion
    Insc.objects.filter(fecha_baja__lt=F("fecha_inscripcion")).update(fecha_baja=F("fecha_inscripcion"))


def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("academia_core", "0005_inscripcionespacio_created_at_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="InscripcionEspacioEstadoLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=20)),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("nota", models.TextField(blank=True, default="")),
            ],
            options={
                "ordering": ["-fecha"],
            },
        ),
        # Quitamos el viejo campo de fecha de la cursada
        migrations.RemoveField(
            model_name="inscripcionespacio",
            name="fecha",
        ),
        # --- Normalización de datos ANTES de agregar los checks ---
        migrations.RunPython(normalize_insc_espacios, noop),
        # Check: si está EN_CURSO ⇒ fecha_baja debe ser NULL
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("estado", "EN_CURSO"), _negated=True),
                    ("fecha_baja__isnull", True),
                    _connector="OR",
                ),
                name="cursada_fecha_null_si_en_curso",
            ),
        ),
        # Check: fecha_baja >= fecha_inscripcion (o fecha_baja NULL)
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("fecha_baja__gte", models.F("fecha_inscripcion")),
                    ("fecha_baja__isnull", True),
                    _connector="OR",
                ),
                name="cursada_fecha_baja_ge_inscripcion",
            ),
        ),
        # FKs del log de estado
        migrations.AddField(
            model_name="inscripcionespacioestadolog",
            name="insc_espacio",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="estado_logs",
                to="academia_core.inscripcionespacio",
            ),
        ),
        migrations.AddField(
            model_name="inscripcionespacioestadolog",
            name="usuario",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
